/**
 * 
 * 复习:
 * Vue是什么?
 * 是一个渐进式的JavaScript框架
 * 优点: 易用,灵活,高效
 * 作者:尤雨溪
 * Vue中有虚拟DOM,数据绑定
 * 渐进式:本身实现的功能很少,但是通过下载相关依赖的包,可以实现更多的功能
 * Vue中基本语法:
 * 指令:
 * v-model:绑定数据(一般用在表单标签上比较多)
 * v-bind:强制绑定数据(一般用在标签上),简写======>:
 * v-on:绑定事件监听的,简写======>@
 * v-if:判断-----标签上使用该指令,多数情况下代表的是该标签在页面中是否存在
 * v-show:显示或者隐藏,设置该标签的display:none
 * v-else----一般配合v-if指令使用
 * v-else-if----一般配合v-if指令使用
 * v-for:用于遍历循环
 * v-for="item in 数组"---item就是数组中的每一项
 * v-for="(item,index) in 数组" index就是索引(下标)
 * v-for="(value,key,index) in 对象" value是每个属性的值,key是每个属性的名字,index就是索引
 * :key="一般放的是id值"----存储的是唯一的值即可,推荐使用id值,目的是让虚拟DOM高效的渲染
 * 事件的修饰符 
 * .prevent---->取消默认事件行为
 * .stop---->取消事件冒泡
 * 实例化Vue的时候,({})大括号的配置信息:
 * el:'#app'----->根据选择器查找对应的模版
 * <div id="app"></div>
 * data:{}里面存放的是属性及值
 * methods:{}存放的是相关的方法
 * computed:{}计算属性: 存放的是相关的属性(可以有get也可以有set)
 * 如果只有get操作,
 * 此时:
 * 属性名(){return  }这是一个get操作
 * 如果有get和set操作
 * 此时:
 * 属性名:{
 *  get(){},
 *  set(){}
 * } 
 * watch监视: 第一种写法:在({})大括号的配置中
 * watch监视: 第二种写法: vm.$watch('属性名字',回调函数)
 * 关于事件监听传入的事件参数对象:
 * 在模版中(html)使用了@或者v-on绑定事件的时候,里面的回调函数可以传入参数,也可以传入事件参数对象:=====>$event
 * 
 * 
 * 插值
 * 
 * 
 * 
 * 
 * 
 * 
 */